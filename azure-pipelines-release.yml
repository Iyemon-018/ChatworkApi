# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
variables:
  BuildConfiguration: Release

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- task: NuGetToolInstaller@1
  inputs:
    versionSpec: 
    checkLatest: true

- task: DotNetCoreCLI@2
  displayName: 'dotnet build ChatworkApi.csproj'
  inputs:
    command: 'build'
    projects: 'sources/ChatworkApi/ChatworkApi.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: 'sources/ChatworkApi/ChatworkApi.csproj'
    nobuild: true
    versioningScheme: 'off'
    verbosityPack: 'Normal'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '3b1a8d29-14b3-493a-891e-e78d71976c9d/86a5867e-93d3-4e52-99b7-ed8ab5c7c545'
    allowPackageConflicts: true

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '4c28fefe-8e81-4da5-8ccb-40954ad1f67e/f26859b5-c70b-4cdf-b6c7-5864c8bd434b'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
